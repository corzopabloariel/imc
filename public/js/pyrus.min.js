
Pyrus = function( e = null ) {
	this.entidad = e; // entidad que se pasa por parametro
	this.objeto = null;
    this.especificacion = null;
    
    this.constructor = function() {
		if(this.entidad === null || this.entidad === "") {
			console.log("AVISO: No se ha pasado ninguna entidad. Uso limitado");
			// no hago ninguna operacion de carga
			return false;
		}
        /* ------------------- */
        this.objeto = ENTIDADES[this.entidad];
        /* ------------------- */
        this.getEspecificacion();
    };
    
    this.objetoLimpio = function() {
		let r = {};
		for(var i in this.especificacion) {
			r[i] = null;
		}
		return r;
    };
    this.getEspecificacion = function() {
        this.especificacion = this.objeto['ATRIBUTOS'];
    };
    /**
     * 
     */
    this.inputAdecuado = function(OBJ_elemento,ATTR_nombre,TAG_nombre,STR_class,OBJ_funcion,placeholder = "") {
        if(OBJ_elemento['NOMBRE'] === undefined) OBJ_elemento['NOMBRE'] = ATTR_nombre;
        OBJ_elemento['NOMBRE'] = (OBJ_elemento['NOMBRE']).toUpperCase();
    
        if(OBJ_elemento['VISIBILIDAD'] == 'TP_VISIBLE') {
            switch(OBJ_elemento['TIPO']) {
                case 'TP_ENTERO':
                    return this.inputString(OBJ_elemento,`${TAG_nombre}`,"number",STR_class,OBJ_funcion,placeholder);
                break;
                case 'TP_COLOR':
                    return this.inputString(OBJ_elemento,`${TAG_nombre}`,"color",STR_class,OBJ_funcion,placeholder);
                break;
                case 'TP_FILE':
                    return this.inputString(OBJ_elemento,`${TAG_nombre}`,"file",STR_class,OBJ_funcion,placeholder);
                break;
                case 'TP_STRING':
                    return this.inputString(OBJ_elemento,`${TAG_nombre}`,"text",STR_class,OBJ_funcion,placeholder);
                break;
                case 'TP_TEXT':
                    return this.inputText(OBJ_elemento,`${TAG_nombre}`,STR_class,OBJ_funcion,placeholder);
                break;
                case 'TP_FECHA':
                    return this.inputString(OBJ_elemento,`${TAG_nombre}`,"date",STR_class,OBJ_funcion,placeholder);
                break;
                case 'TP_PASSWORD':
                    return this.inputString(OBJ_elemento,`${TAG_nombre}`,"password",STR_class,OBJ_funcion,placeholder);
                break;
                case 'TP_ENUM':
                    return this.select(OBJ_elemento,`${TAG_nombre}`,STR_class,OBJ_funcion,OBJ_elemento["ENUM"],placeholder);
                break;
            }
        } else return this.inputString(OBJ_elemento,`${TAG_nombre}`,"hidden",STR_class,placeholder);
    }
    this.formulario = function(id = "", ngReadOnly = null) {
        if(this.objeto['FORM'] === undefined) return "";
		if(window.formulario === undefined)
			window.formulario = [];

		if (window.formulario[this.entidad] === undefined)
			window.formulario[this.entidad] = {};

		if (window.formulario[this.entidad][id] === undefined) {
			window.formulario[this.entidad][id] = "";
			let OBJ_funciones = {}
			let ARR_form = this.objeto['FORM'];//ARRAY de OBJETOS

			if (this.objeto['FORM_CLASS'] === undefined) this.objeto['FORM_CLASS'] = 'form-control';
			let STR_class = this.objeto['FORM_CLASS'];

			if (this.objeto['FUNCIONES'] !== undefined) OBJ_funciones = this.objeto['FUNCIONES'];
            
			for(let i in ARR_form) {
                let row = ARR_form[i];
                let TEXT_row = "";
                TEXT_row += '<div class="row justify-content-center">';
                for(let e in row) {
                    let aux = "";
                    let AUX_nombre = e + (id != "" ? "_" + id : "");
                    let OBJ_funcion = {};
                    if (OBJ_funciones[e] !== undefined)
                        OBJ_funcion = this.objeto['FUNCIONES'][e];
                    if(e == "BTN")
                        aux = '<button type="submit" class="btn btn-block btn-success"><i class="fas fa-check"></i></button>';
                    else {
                        aux = this.inputAdecuado(this.especificacion[e], e, AUX_nombre, STR_class, OBJ_funcion);
                        if(this.especificacion[e].TIPO == "TP_FILE") {
                            let valid = this.especificacion[e].VALID;
                            let invalid = this.especificacion[e].INVALID;
                            let browser = this.especificacion[e].BROWSER;
                            aux += `<label data-invalid="${invalid}" data-valid="${valid}" class="custom-file-label mb-0" data-browse="${browser}" for="${AUX_nombre}"></label>`;
                        }
                        if(this.objeto.JSON !== undefined) {
                            if(this.objeto.JSON[e] !== undefined) {
                                aux = "";
                                for(let j in this.objeto.JSON[e])
                                    aux += this.inputAdecuado(this.especificacion[e], e, `${AUX_nombre}_${j}`, STR_class, OBJ_funcion, `${this.especificacion[e]["NOMBRE"]} - ${this.objeto.JSON[e][j]}` );
                            }
                        }
                    }
                    row[e] = row[e].replace(`/${e}/`,aux);
                    TEXT_row += row[e];
                }
                TEXT_row += '</div>';
                window.formulario[this.entidad][id] += TEXT_row;
            }
		}
		return `<div class="contenedorForm w-100" id="form_${this.entidad + (id != "" ? "_" + id : "")}">${window.formulario[this.entidad][id]}</div>`;
    }
    
    this.inputString = function(OBJ_elemento,STR_nombre,STR_type,STR_class,OBJ_funcion = null, placeholder = "") {
		let STR_funcion = "";
        let necesario = 0;
        let inputData = "";
		if(OBJ_elemento.NECESARIO !== undefined) necesario = OBJ_elemento.NECESARIO;
        if(OBJ_funcion !== null) {
            for(var i in OBJ_funcion) {
                if(STR_funcion != "") STR_funcion += " ";
                STR_funcion += i + "=" + OBJ_funcion[i];
            }
        }
        if(STR_class != "") STR_class += " ";
        switch (STR_type) {
            case "number":
                STR_type = "text";
                STR_class += " texto-numero text-right";
            break;
            case "password":
                STR_class += " texto-password";
            break;
            case "text":
                STR_class += " texto-text";
            break;
            case "date":
                STR_class += " texto-date";
                break;
            case "file":
                STR_class += " custom-file-input";
                break;
        }
        if(OBJ_elemento.CLASS !== undefined) {
            if(STR_class != "") STR_class += " ";
            STR_class += OBJ_elemento.CLASS;
        }
        if(necesario)
            inputData = "required='true'";
        if(STR_funcion != "") {
            if(inputData != "") inputData += " ";
            inputData += STR_funcion;
        }
        if(OBJ_elemento.MAXLENGTH !== undefined) {
            if(inputData != "") inputData += " ";
            inputData += `maxlength="${OBJ_elemento.MAXLENGTH}"`;
        }
        return `<input ${inputData} name="${STR_nombre}" id="${STR_nombre}" class="${STR_class}" type="${STR_type}" placeholder="${placeholder == "" ? OBJ_elemento["NOMBRE"] : placeholder}" />`;
    }
    this.inputText = function(OBJ_elemento,STR_nombre,STR_class,OBJ_funcion = null, placeholder = "") {
        let STR_funcion = "";
        let necesario = 0;
        if(OBJ_elemento.NECESARIO !== undefined) necesario = OBJ_elemento.NECESARIO;
        if(OBJ_funcion !== null) {
            for(var i in OBJ_funcion) {
                if(STR_funcion != "") STR_funcion += " ";
                STR_funcion += i + "=" + OBJ_funcion[i];
            }
        }
        if(OBJ_elemento.EDITOR !== undefined) {
            if(STR_class != "") STR_class += " ";
            STR_class += "ckeditor";
        }
        if(OBJ_elemento.FIELDSET !== undefined)
            return `<fieldset><legend>${placeholder == "" ? OBJ_elemento.NOMBRE : placeholder}</legend><textarea ${(necesario ? "required='true'" : "")} ${STR_funcion} name="${STR_nombre}" id="${STR_nombre}" class="${STR_class}" placeholder="${placeholder == "" ? OBJ_elemento.NOMBRE : placeholder}"></textarea></fieldset>`;
		return `<textarea ${(necesario ? "required='true'" : "")} ${STR_funcion} name="${STR_nombre}" id="${STR_nombre}" class="${STR_class}" placeholder="${placeholder == "" ? OBJ_elemento.NOMBRE : placeholder}"></textarea>`;
	}
    
    /* ----------------- */
	return this.constructor();
}